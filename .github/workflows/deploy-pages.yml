name: Deploy 2 Angular apps (subcarpetas) to GitHub Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # ---------- primerProyecto ----------
      - name: Install deps (primerProyecto)
        working-directory: primerProyecto
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build (primerProyecto)
        working-directory: primerProyecto
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          npm run build -- \
            --configuration=production \
            --base-href="/$REPO_NAME/primerProyecto/"

      - name: SPA fallback (primerProyecto)
        working-directory: primerProyecto
        run: |
          # Detecta /browser si existe; si no, usa la raÃ­z de dist
          OUT="dist/primer-proyecto/browser"
          if [ ! -d "$OUT" ]; then OUT="dist/primer-proyecto"; fi
          echo "Usando OUT=$OUT"
          cp "$OUT/index.html" "$OUT/404.html"

      # ---------- proyectoFinal ----------
      - name: Install deps (proyectoFinal)
        working-directory: proyectoFinal
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build (proyectoFinal)
        working-directory: proyectoFinal
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          npm run build -- \
            --configuration=production \
            --base-href="/$REPO_NAME/proyectoFinal/"

      - name: SPA fallback (proyectoFinal)
        working-directory: proyectoFinal
        run: |
          OUT="dist/primer-proyecto/browser"
          if [ ! -d "$OUT" ]; then OUT="dist/primer-proyecto"; fi
          echo "Usando OUT=$OUT"
          cp "$OUT/index.html" "$OUT/404.html"

      # ---------- Empaquetar ambas apps ----------
      - name: Prepare combined artifact
        run: |
          # Detecta salida real de cada app
          OUT1="primerProyecto/dist/primer-proyecto/browser"
          [ -d "$OUT1" ] || OUT1="primerProyecto/dist/primer-proyecto"

          OUT2="proyectoFinal/dist/primer-proyecto/browser"
          [ -d "$OUT2" ] || OUT2="proyectoFinal/dist/primer-proyecto"

          mkdir -p site/primerProyecto site/proyectoFinal
          cp -r "$OUT1"/* site/primerProyecto/
          cp -r "$OUT2"/* site/proyectoFinal/

          # index simple opcional
          cat > site/index.html <<'HTML'
          <!doctype html><meta charset="utf-8">
          <title>Mis apps</title>
          <h1>Mis apps</h1>
          <ul>
            <li><a href="./primerProyecto/">primerProyecto</a></li>
            <li><a href="./proyectoFinal/">proyectoFinal</a></li>
          </ul>
          HTML

      - uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - uses: actions/deploy-pages@v4
